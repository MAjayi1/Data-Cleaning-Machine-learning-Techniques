# -*- coding: utf-8 -*-
"""itm618assignment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y_Ls4GtShTFIIZdfKCiUYIuVbLJBkcVt
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, export_text
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report
import matplotlib.pyplot as plt
from sklearn.tree import plot_tree

train_data = pd.read_csv('trainset.csv')

#Data Cleaning
train_data = train_data.replace('unknown', pd.NA)
train_data = train_data.dropna()

features = ['age', 'job', 'marital', 'education', 'housing', 'loan', 'contact', 'month', 'day_of_week', 'duration', 'campaign', 'pdays', 'poutcome', 'nr.employed']
target = 'Subscribed'

train_data_encoded = pd.get_dummies(train_data[features], drop_first=True)
train_data_encoded['Subscribed'] = train_data[target]

X_train, X_val, y_train, y_val = train_test_split(train_data_encoded.drop(target, axis=1), train_data_encoded[target], test_size=0.2, random_state=42)

decision_tree_model = DecisionTreeClassifier(random_state=42)
decision_tree_model.fit(X_train, y_train)

logistic_regression_model = LogisticRegression(random_state=42)
logistic_regression_model.fit(X_train, y_train)

test_data = pd.read_csv('testset.csv')

test_data = test_data.replace('unknown', pd.NA)
test_data = test_data.dropna()
test_data_encoded = pd.get_dummies(test_data[features], drop_first=True)

decision_tree_predictions = decision_tree_model.predict(test_data_encoded)
logistic_regression_predictions = logistic_regression_model.predict(test_data_encoded)

print("\nDecision Tree Classification Report:\n", classification_report(test_data['Subscribed'], decision_tree_predictions))
print("\nLogistic Regression Classification Report:\n", classification_report(test_data['Subscribed'], logistic_regression_predictions))

print("Decision Tree Accuracy:", accuracy_score(test_data['Subscribed'], decision_tree_predictions))
print("Logistic Regression Accuracy:", accuracy_score(test_data['Subscribed'], logistic_regression_predictions))



plt.figure(figsize=(20, 10))
plot_tree(decision_tree_model, feature_names=X_train.columns, class_names=['Not Subscribed', 'Subscribed'], filled=True, rounded=True)
plt.savefig('decision_tree.png')
plt.show()